name: assignment3

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: ./book
          file: ./book/Dockerfile
          tags: book-service:latest
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: book-service
          path: /tmp/image.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: book-service
          path: /tmp/image.tar

      - name: Load Docker images from artifact
        run: docker load --input /tmp/image.tar

      - name: Set up Docker Compose
        run: docker-compose -f ./docker-compose.yml up -d

      - name: Check container is running
        run: docker ps

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests

      - name: Run pytest tests
        run: |
          pytest -v assn3_tests.py > assn3_test_results.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: assn3_test_results
          path: assn3_test_results.txt

      - name: Tear down Docker Compose
        run: docker-compose -f ./docker-compose.yml down

  query:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: book-service
          path: /tmp/image.tar

      - name: Load Docker images from artifact
        run: docker load --input /tmp/image.tar

      - name: Set up Docker Compose
        run: docker-compose -f ./docker-compose.yml up -d

      - name: Check container is running
        run: docker ps

      - name: Read query.txt file
        run: |
          cat query.txt | while read line
          do
            # Perform GET request for each query string
            response=$(curl -s "http://localhost:5001/books$line")
            
            # Write to response.txt
            echo "query: $line" >> response.txt
            echo "response: $response" >> response.txt
          done

      - name: Upload response.txt
        uses: actions/upload-artifact@v4
        with:
          name: response-results
          path: response.txt
